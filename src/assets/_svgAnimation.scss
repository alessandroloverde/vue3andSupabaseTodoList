/***************************************************
 * Generated by SVG Artista on 6/3/2024, 6:21:13 PM
 * MIT license (https://opensource.org/licenses/MIT)
 * W. https://svgartista.net
**************************************************/

@keyframes beamRay {
  0% {
    opacity: 1;
    filter: none;
  }
  50% {
    opacity: 0.3;
    filter: blur(3px);
  }
  100% {
    opacity: 1;
    filter: blur(0px);
  }
}

@keyframes pulse {
  0% {
    opacity: 1;
    filter: none;
  }
  50% {
    opacity: 0.3;
    filter: blur(3px);
  }
  100% {
    opacity: 1;
    filter: blur(0px);
  }
}

@keyframes float {
  0% { transform: translatey(0) }
  25% { transform: translatey(2vh) }
  50% { transform: translatey(0) }
  75% { transform: translatey(-1.5vh) }
  100% { transform: translatey(0) }
}

@keyframes spin {
  0% { transform: rotate(0deg);   transform-origin: 50% 50%;
  }
  100% { transform: rotate(360deg);   transform-origin: 50% 50%;
  }
}

svg #Gear { 
  color: rebeccapurple;
  animation: spin 4s linear 2; 
  transform-origin: 50% 50%;

}

svg.active .beamRay { animation: beamRay 4s linear 0s infinite normal none }
svg.active .human { animation: float 6s ease-in-out infinite alternate }

svg .starsGroup-1 {
  opacity: 0.2;

  circle { fill:rgb(63, 9, 101) }
}
svg.active .starsGroup-1 {
  $noOfPaths: 12;
  $hue: 150;

  opacity: 1;

  @for $i from 1 through $noOfPaths {
    path:nth-of-type(#{$i}) {
      fill: oklch(73% 0.13 ($hue + (210/$noOfPaths * $i)));
      animation: pulse #{1.5 + random(3)}s linear #{random(2)}s infinite normal none;
    }   
  }
  circle {
    animation: pulse 4s linear 0s infinite normal none;
  }
}

svg .starsGroup-2 {
  opacity: 0.2;

  circle { fill:rgb(63, 9, 101) }
}
svg.active .starsGroup-2 {
  $noOfPaths: 12;
  $hue: 100;

  opacity: 1;

  @for $i from 1 through $noOfPaths {
    path:nth-of-type(#{$i}) {
      fill: oklch(73% 0.13 ($hue + (210/$noOfPaths * $i)));
      animation: pulse #{1.5 + random(4)}s linear #{random(1)}s infinite normal none;
    }   
  }
  circle {
    animation: pulse 4s linear 0s infinite normal none;
  }
}



 svg .svg-elem-1 {
  stroke-dashoffset: 430.93896484375px;
  stroke-dasharray: 430.93896484375px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.8s;
}

svg.active .svg-elem-1 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-2 {
  stroke-dashoffset: 349.87451171875px;
  stroke-dasharray: 349.87451171875px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.12s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.9s;
}

svg.active .svg-elem-2 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-3 {
  stroke-dashoffset: 328.28289794921875px;
  stroke-dasharray: 328.28289794921875px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.24s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1s;
}

svg.active .svg-elem-3 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-4 {
  stroke-dashoffset: 414.99346923828125px;
  stroke-dasharray: 414.99346923828125px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.36s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.1s;
}

svg.active .svg-elem-4 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-5 {
  stroke-dashoffset: 401.59954833984375px;
  stroke-dasharray: 401.59954833984375px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.48s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.2000000000000002s;
}

svg.active .svg-elem-5 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-6 {
  stroke-dashoffset: 189.685546875px;
  stroke-dasharray: 189.685546875px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.6s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.3s;
}

svg.active .svg-elem-6 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-7 {
  stroke-dashoffset: 242.4267578125px;
  stroke-dasharray: 242.4267578125px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.72s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.4000000000000001s;
}

svg.active .svg-elem-7 {
  stroke-dashoffset: 0;
  fill: rgb(255, 98, 98);
}

svg .svg-elem-8 {
  stroke-dashoffset: 407.3126220703125px;
  stroke-dasharray: 407.3126220703125px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.84s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.5s;
}

svg.active .svg-elem-8 {
  stroke-dashoffset: 0;
  fill: rgb(255, 98, 98);
}

svg .svg-elem-9 {
  stroke-dashoffset: 391.4072265625px;
  stroke-dasharray: 391.4072265625px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0.96s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.6s;
}

svg.active .svg-elem-9 {
  stroke-dashoffset: 0;
  fill: rgb(255, 98, 98);
}

svg .svg-elem-10 {
  stroke-dashoffset: 378.24298095703125px;
  stroke-dasharray: 378.24298095703125px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 1.08s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.7000000000000002s;
}

svg.active .svg-elem-10 {
  stroke-dashoffset: 0;
  fill: rgb(255, 98, 98);
}

svg .svg-elem-11 {
  stroke-dashoffset: 618.5318603515625px;
  stroke-dasharray: 618.5318603515625px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 1.2s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.8s;
}

svg.active .svg-elem-11 {
  stroke-dashoffset: 0;
  fill: rgb(255, 98, 98);
}

svg .svg-elem-12 {
  stroke-dashoffset: 93.08927154541016px;
  stroke-dasharray: 93.08927154541016px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 1.3199999999999998s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.9000000000000001s;
}

svg.active .svg-elem-12 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-13 {
  stroke-dashoffset: 93.50595092773438px;
  stroke-dasharray: 93.50595092773438px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 1.44s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2s;
}

svg.active .svg-elem-13 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}

svg .svg-elem-14 {
  stroke-dashoffset: 93.46403503417969px;
  stroke-dasharray: 93.46403503417969px;
  fill: transparent;
  transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 1.56s,
              fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.1s;
}

svg.active .svg-elem-14 {
  stroke-dashoffset: 0;
  fill: rgb(255, 255, 255);
}


// ---Claim Animation --------------------------------------------------------------------------------------- //
$claimPathsValue: (
  1: 238px, 2: 184px, 3: 155px, 4: 184px, 5: 151px, 6: 235px, 7: 184px, 8: 220px, 9: 151px, 10: 148px,
  11: 220px, 12: 201px, 13: 286px, 14: 201px, 15: 57px, 16: 201px, 17: 262px, 18: 158px, 19: 178px, 20: 196px,
  21: 220px, 22: 262px, 23: 235px, 24: 184px, 25: 220px, 26: 151px, 27: 155px, 28: 158px, 29: 189px, 30: 196px,
  31: 121px
);
$strokeAnimation: (
  duration: 0.6s,
  easing: cubic-bezier(0.47, 0, 0.745, 0.715),
  baseDelay: 0.5s,
  staggerInterval: 0.12s,
);
$fillAnimation: (
  duration: 0.4s,
  easing: cubic-bezier(0.47, 0, 0.745, 0.715),
  baseDelay: 0.3s,
  staggerInterval: 0.1s
);
//$totalStrokeDuration: map-get($strokeAnimation, duration) + length($claimPathsValue) * map-get($strokeAnimation, staggerInterval);

@for $i from 1 through length($claimPathsValue) {
  $hue: 11.6 * $i;
  $fillColor: oklch(71% .16 $hue);
  $strokeDelay: map-get($strokeAnimation, baseDelay) + $i * map-get($strokeAnimation, staggerInterval);
  $fillDelay: map-get($fillAnimation, baseDelay) + $i * map-get($fillAnimation, staggerInterval);
  $firstAnimationDuration: $i * map-get($strokeAnimation, staggerInterval);

  @keyframes animate-stroke-#{$i} {
    0% {
      stroke-dashoffset: map-get($claimPathsValue, $i);
      stroke-dasharray: map-get($claimPathsValue, $i);
    }
    100% {
      fill: transparent;
      stroke-dashoffset: 0;
      stroke-dasharray: map-get($claimPathsValue, $i);
    }
  }

  @keyframes animate-strokeandfill-#{$i} {
    0% {
      fill: $fillColor;
      stroke: oklch(71% .16 (11.6 * $i));
      fill-opacity: 0.15;
    }
    100% {
      fill: transparent;
      stroke:rgb(255, 98, 98);
      fill-opacity: 1;
    }
  }

  svg .svg-claim-#{$i} {
    stroke-dashoffset: map-get($claimPathsValue, $i);
    stroke-dasharray: map-get($claimPathsValue, $i);
    fill: transparent;
  }

  svg.active .svg-claim-#{$i} {
    stroke-dashoffset: 0;
    fill: $fillColor;
    animation: 
      animate-stroke-#{$i} 
      map-get($strokeAnimation, duration) 
      map-get($strokeAnimation, easing) 
      $strokeDelay 
      both,
      animate-strokeandfill-#{$i} 
      map-get($strokeAnimation, duration) 
      map-get($strokeAnimation, easing) 
      4.4s + $strokeDelay 
      both 
      reverse;
  }
}
// ---------------------------------------------------------------------------------------------------------- //



// ---Hexagons Animation ------------------------------------------------------------------------------------ //
/** 
* * The function transforms the color map into a list first.
*/

@for $i from 1 through 3 {
  $transformedColorMap: ();

  @each $key, $value in $presentationColors {
    $transformedColorMap: append($transformedColorMap, $value)
  }

  .hexagon-#{$i} > svg .svg-hexagon {
    stroke-dashoffset: 1845;
    stroke-dasharray: 1845;
    transition: stroke-dashoffset 4s cubic-bezier(0.77, 0, 0.175, 1) 1s * $i;
  }
  .hexagon-#{$i} svg.active .svg-hexagon {
    stroke-dashoffset: 0;
    stroke: nth($transformedColorMap, $i);
  }
}
// ---------------------------------------------------------------------------------------------------------- //
