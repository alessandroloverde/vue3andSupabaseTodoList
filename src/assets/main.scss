@use 'sass:color';

@import "./_variables.scss";
@import "./_base.scss";
@import "./fonts.scss";


:root {
  --popper-theme-background-color: #333333;
  --popper-theme-background-color-hover: #333333;
  --popper-theme-text-color: #d24f4f;
  --popper-theme-border-width: 0px;
  --popper-theme-border-style: solid;
  --popper-theme-border-radius: 6px;
  --popper-theme-padding: 32px;
  --popper-theme-box-shadow: 0 6px 30px -6px rgba(0, 0, 0, 0.25);
}


.spacer { width: $standardMargin }

.btn {
  width: 2.5em;
  height: 2.5em;
  border-radius: $border-radius;
  display: flex;
  justify-content: center;
  align-items: center;

  &.iconOnly {
    text-transform: none;
    background-color: transparent;
    border-width: 0;
    font: inherit;
    line-height: 1;
    padding: 0;
    cursor: pointer;
  }

  @each $key, $value in $icons {
    &--icn--#{$key} {
      @extend .btn;

      &::before {
        content: buttonIcon($key);
        font-family: $icomoon-font-family;
        font-size: inherit;
        color: inherit;
      }
    }
  }
  &--avatar,
  &--add {
    text-transform: none;
    background-color: transparent;
    border-width: 0;
    font: inherit;
    padding: 0;
    cursor: pointer;
  }
  &--avatar {
    &::before {
      content: buttonIcon(icon-user-circle);
      font-family: $icomoon-font-family;
      font-size: 2.5em;
      color: $ctaColor;
    }
  }
  &--add {
    display: flex;
    flex-shrink: 0;
    height: 2rem;
    width: 2rem;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    line-height: 1;
    background-color: $textBeige;

    &::before {
      content: buttonIcon(icon-plus-circle);
      font-family: $icomoon-font-family;
      font-size: 2rem;
      color: $medBkg;
    }
  }
}

// --- Icon and color picker -------------------------------------------------------------------------------- //
.selectedIcon {
    @each $key, $name in $colors {
      &.#{$key} { 
        border-color: $name;

        &::before { color: $name }
      }
    }
}
.iconPicker,
.colorPicker {
  max-width: 20rem;

  input[type="radio"] {
    width: 2em;
    height: 2em;
    border-radius: 50%;
    padding: 2px;
    appearance: none;
    outline: none;
    background-clip: content-box;
    background-color: transparent;

    &:disabled { background-color: var(--radio-disabled-bg-color) }
    &:disabled:checked { background-color: var(--radio-disabled-bg-color) }
    &:not(:disabled):checked {
      background-clip: content-box;
      padding: 2px;
      transform: scale(1.1);
    }
  }
}
.iconPicker {
  display: flex;
  flex-wrap: wrap;

  input[type="radio"] {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid $textWhite;
    color: $textWhite;
    margin: 0.25em;
    opacity: 0.75;
    transition: opacity 0.3s;

    &:not(:disabled):checked { background-color: red }

    @media (hover: hover) { 
      &:not(:disabled):hover {
        cursor: pointer;
        opacity: 1;
        transform: scale(1.1);
      }
      &:not(:disabled):checked:hover { background-color: darken(red, 20%) }
    }  
  }
}

.colorPicker {  
  input[type="radio"] {
    display: inline-block;
    margin: auto 0.25em;
    transition: background-color 0.3s;

    @each $key, $name in $colors {
      &.#{$key} { 
        background-color: $name;
        border: 1px solid $name;

        &:not(:disabled):checked {
          background-color: darken($name, 30%);
          background-image: radial-gradient(
            circle,
            var($name) 0%,
            var($name) 50%,
            transparent 60%,
            transparent 100%
          );
        }
        @media (hover: hover) { 
          &:not(:disabled):hover {
            background-color: lighten($name, 8%);
            cursor: pointer;
            transform: scale(1.1);
          }
          &:not(:disabled):checked:hover {
            background-color: darken($name, 30%);
            background-image: radial-gradient(
              circle,
              var($name) 0%,
              var($name) 50%,
              transparent 60%,
              transparent 100%
            );
          }
        }
      }
    }
  }

}
// ---------------------------------------------------------------------------------------------------------- //

// --- Ugency checkbox -------------------------------------------------------------------------------------- //
.urgentSwitch {
	display: flex;
	align-items: center;

	.form-control > input[type="checkbox"] {
		-webkit-appearance: none;
		appearance: none;
		margin: 0;
		font: inherit;
		color: currentColor;
		width: 2.25em;
		height: 2.25em;
		border: 0.15em solid transparent;
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;

		&::before {
			content: buttonIcon('icon-warning');
			font-family: $icomoon-font-family;
			color: $textBeige;
			width: 1em;
			height: 1em;
			line-height: 1;
			font-size: 1.25em;
			transition: color 0.3s ease-in-out
		}
		//&:checked::before { color: red; }
	}
}
// ---------------------------------------------------------------------------------------------------------- //

.appHeader {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;

  &--title {
    color: $textWhite;
    margin-left: auto;
    font-family: $atkinson;
    font-size: 60px;
    text-transform: uppercase;
    font-weight: 400;
    letter-spacing: 1px;
  }
  &--avatar {
    margin-left: auto;
    font-size: 24px;
  }
}

.flyoutMenu {
  background-color: $textWhite;
  border-radius: $border-radius;
}

#app {
  max-width: 1280px;
  height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  //background-color: rgba(107, 198, 194, 0.25);

  // *** Style fot the Flyout Menu. Needs specificity ***
  .popper {
    $popperBkgColor: $textWhite;

    //background-color: $popperBkgColor;
    padding: $standardMargin * 2;
    border-radius: 20px;
    color: $darkBkg;

    & #arrow::before { background: $popperBkgColor }
    /* &:hover,
    &:hover > #arrow::before { background: $popperBkgColor } */
  }
}







main {
  height: 100%;
  display: flex;
}
.appContainer {
  display: flex;
  flex: 1 1 auto;
  flex-wrap: wrap;
  border-radius: 36px;
  //background-color: rgba(198, 152, 107, 0.25);

  .categoriesArea,
  .tasksArea {
    flex-wrap: wrap;
    height: 100%;

    & > header {
      width: 100%;
      display: flex;
      line-height: 1;
      padding: $standardMargin * 2;

      form {
        display: flex;
        flex: 1 1 auto;
        align-items: center;

        input {
          width: 100%;
          margin-left: $standardMargin * 2; 
          margin-right: $standardMargin;
          &:focus {box-shadow: 0 0 0 0.25rem rgba(255, 255, 255, 0.25);}
        }
      }
    }
    &--info {
      display: flex;
      justify-content: space-between;
      padding: $standardMargin $standardMargin * 2;

      & > h4 {
        font-family: $titillium;
        color: $fff;
        font-size: 18px;

        & > span { 
          color: $ctaColor;
          margin-left: 0.125em; 
        }
      }
    }
    &--main {
      width: 100%;
      padding: $standardMargin $standardMargin * 2;
    }
  }

  .categoriesArea {
    display: flex;
    flex-basis: 35%;
    flex-direction: column;
    background-color: $darkBkg;
    border-top-left-radius: $standardMargin * 3;

    & > header {
      border-top-left-radius: $standardMargin * 3;
      background: rgba(255, 98, 98, 0.2);
      background: linear-gradient(to top, rgba($darkestBkg, 0.7) 0%, rgba($lightBkg, 0.7) 100%);
    }
    &--title {
      font-family: $robotoSlab;
      text-transform: uppercase;
      font-size: 1.5625rem;
      font-weight: 700;
      color: $textBeige;
      white-space: nowrap;

      & > span { color: $ctaColor }
    }
  }
  .tasksArea {
    flex-basis: 65%;
    background-color: $medBkg;
/*     background: linear-gradient(
      to bottom left,
          hsla(261.29, 26.5%, 22.94%, 0.5) 0%,
          hsla(261.28, 26.65%, 22.74%, 0.5) 7.6%,
          hsla(261.24, 27.12%, 22.17%, 0.5) 14.8%,
          hsla(261.18, 27.88%, 21.29%, 0.5) 21.7%,
          hsla(261.11, 28.96%, 20.16%, 0.5) 28.4%,
          hsla(261.02, 30.4%, 18.82%, 0.5) 34.8%,
          hsla(260.91, 32.25%, 17.35%, 0.5) 41.1%,
          hsla(260.79, 34.58%, 15.79%, 0.5) 47.3%,
          hsla(260.66, 37.47%, 14.21%, 0.5) 53.4%,
          hsla(260.53, 41.02%, 12.65%, 0.5) 59.6%,
          hsla(260.4, 45.29%, 11.18%, 0.5) 65.9%,
          hsla(260.17, 55.66%, 8.71%, 0.5) 78.8%,
          hsla(260.08, 60.95%, 7.83%, 0.5) 85.5%,
          hsla(260.02, 65.05%, 7.26%, 0.5) 92.6%,
          hsla(260, 66.67%, 7.06%, 0.5) 100%
    ); */
    border-top-right-radius: $standardMargin * 3;
    box-shadow: 5px 5px 10px 0px rgba(0, 0, 0, 0.55), 
                inset 5px -5px 10px 0px rgba(0, 0, 0, 0.45);

    & > header {
      border-top-right-radius: $standardMargin * 3;
      background: rgba(255, 98, 98, 0.2);
      background: linear-gradient(to top, rgba(31, 9, 17, 0.7) 0%, rgba($lightAltBkg, 0.7) 100%);
    }
    &--title {
      font-family: $robotoSlab;
      text-transform: uppercase;
      font-size: 1.5625rem;
      font-weight: 700;
      color: $textBeige;
      white-space: nowrap;

      & > span { color: $ctaColor }
    }
    &--completedSwitch {
      margin-left: $standardMargin * 2;
      color: $textBeige;
      font-family: $titillium;
      font-weight: 600;
    }
  }
}


// --- Style for each task ---------------------------------------------------------------------------------- //
.taskList {
  height: 66px; // ! Beware: hard-coded value
  background: linear-gradient(to left, rgba(grey, 0.6) 25%, rgba(scale-color(grey, $lightness: -40%), 0.6) 100%) $lightBkg;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: $border-radius * 2;
  margin: $standardMargin * 1.5 auto;
  border: 1px solid grey;
  overflow: hidden;

  &:first-child { margin-top: 0 }
  &.completed { 
    opacity: 0.5;
    filter: saturate(70%); 
  }

  @each $key, $name in $colors {
    &.#{$key} { 
      background: linear-gradient(to left, rgba($name, 0.6) 25%, rgba(color.scale($name, $lightness: -40%), 0.6) 100%) $lightBkg;
      border-color: $name; // ? Cosmetic: not sure about it

      .taskList--completeTask > button[class*=icon-]:hover::before { color: #{$name} }
      .taskList--title > h4 { text-shadow: 0 1px color-mix(in srgb, black 70%, #{$name}) }
      .taskList--category div[class*=icon-] { 
        background-color: color-mix(in srgb, black 35%, #{$name}); // * Also an option: color.scale($name, $lightness: -35%, $saturation: -25%)
        
        &:hover {
          color: lighten($name, 20%);
          cursor: pointer;
          transition: color 0.3s ease-in-out;

          &::before { 
            border-color: lighten($name, 20%);
            transition: border-color 0.3s ease-in-out
          }
        }
      }
      .taskList--actions > button.iconOnly:hover { color: lighten($name, 20%) }
      .taskList--actions > .urgentSwitch input[type=checkbox]:hover:before { color: lighten($name, 20%) }  
      .taskList--actions > .urgentSwitch input[type=checkbox].isUrgent { border-color: lighten($name, 20%) }  
    }
  }

  &--completeTask,
  &--category {
		height: 100%;
		display: flex;
		flex: 0 0 auto;
		align-items: center;
		border-left: 1px solid rgba(0,0,0, 0.15);
    background-color: rgba(0,0,0, 0.15);
  }
  &--completeTask {
		border-right: 1px solid rgba(0,0,0, 0.15);

    & > button[class*=icon-] {
      width: auto;
      height: auto;
      color: $textBeige;
      font-size: 2.5rem;
      margin: auto $standardMargin;

      &:hover::before { transition: color 0.3s ease-in-out }
    }
  }

  &--category div[class*=icon-] {
		width: 3rem;
		height: 3rem;
		font-size: 1.25rem;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		margin: auto $standardMargin;
		color: $textBeige;

    &::before {
      width: 2.5rem;
      height: 2.5rem;
      border: 2px solid $textBeige;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
    }
  }
  &--title { 
		flex: 1 1 auto;
		color: $textBeige;
		margin-left: $standardMargin;
    pointer-events: none;

    .completed & { text-decoration: line-through }
  }
	&--actions {
		flex: 1 1 auto;
		display: flex;
		justify-content: flex-end;
		margin-right: $standardMargin;

		button.iconOnly {
			color: $textBeige;
			font-size: 24px; // Uniform to H3
			width: auto;
			margin: auto $standardMargin/2;

			&:hover { transition: color 0.3s ease-in-out }
		}
		.urgentSwitch { margin: auto $standardMargin/2 }
	}
}
// ---------------------------------------------------------------------------------------------------------- //


.categoryList {
  li[class] {
    display: flex;
    justify-content: flex-end;

    .selectedIcon {
      display: flex;
      flex: 0 0 auto;
      justify-content: center;
      align-items: center;
      margin: 0 $standardMargin 0 0;
      border: 2px solid $textWhite;
      opacity: 0.75;
      transition: opacity 0.3s;
      width: 2em;
      height: 2em;
      border-radius: 50%;
      padding: 2px;
      appearance: none;
      outline: none;
      background-clip: content-box;
      background-color: transparent;
    }
    
    button[class^="btn--icn"] {
      margin: $standardMargin/4;

      &:not(:only-child):last-child { margin-right: 0 }
    }
  }
}

.tempLogin {
  width: 100%;
  display: flex;
  justify-content: space-between;
  margin: 12px;
}

@media (hover: hover) {
  a:hover {
    background-color: hsla(160, 100%, 37%, 0.2);
  }
}

.authentication {
  height: 120px;
  background-color: antiquewhite;
  display: flex;
  flex: 1 1 100%;
  color: #333333;

  & > div:first-child {
    display: flex;
    flex-direction: column;
    padding: 12px;
    background-color: burlywood;
  }
  p { margin: 0; }
}

#Register {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: chocolate;

  & > form {
    display: flex;
    flex-direction: column;
  }
}
#EmailConfirmation {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: rgb(90, 172, 131);
}
#Login {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: rgb(180, 106, 159);

  & > form {
    display: flex;
    flex-direction: column;
  }
}
#ForgotPassword {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: rgb(60, 58, 79);

  & > form {
    display: flex;
    flex-direction: column;
  }
}
#UserPage {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: rgb(128, 144, 90);

  & > form {
    display: flex;
    flex-direction: column;
  }
}